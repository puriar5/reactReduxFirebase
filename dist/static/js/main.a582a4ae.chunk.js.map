{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLink.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","href","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","layout_SignedInLinks","SignedOutLink","style","left","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","toString","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","autherId","add","objectSpread","authorId","Date","App","layout_Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a582a4ae.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nlet hrefLink = '#';\r\n\r\nconst SignedInLinks = (props) => {\r\n    return(\r\n       <ul className=\"right\">\r\n           <li>\r\n               <NavLink to=\"/create\">New Project</NavLink>\r\n           </li>\r\n           <li><a href={hrefLink} onClick = {props.signOut}>Log Out</a></li>\r\n           <li>\r\n               <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n                {props.profile.initials}</NavLink>\r\n           </li>\r\n       </ul>\r\n    )\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' })\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', err})\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut()\r\n        .then(()=>{\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' })\r\n        }).catch(err => {\r\n            dispatch({ type: 'SIGNUP_ERROR' ,err})\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n    return(\r\n       <ul className=\"right\">\r\n           <li>\r\n               <NavLink to=\"/signup\">Signup</NavLink>\r\n           </li>\r\n           <li>\r\n               <NavLink to=\"/signin\">Login</NavLink>\r\n           </li>\r\n       </ul>\r\n    )\r\n\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLink'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks />\r\n    return(\r\n        <nav className=\"nav-wrapper grey draken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\" style={{left:'20%'}} >ProjectMan</Link>\r\n                { links }\r\n            </div>\r\n        </nav>   \r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return{\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) =>{\r\n    const { notifications } = props;\r\n    return(\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">\r\n                        Notifications\r\n                    </span>\r\n                    <ul className=\"notifications\">\r\n                        {\r\n                            notifications && notifications.map(item => {\r\n                                return (\r\n                                    <li key={item.id}>\r\n                                    <span className=\"pink-text\">{item.user} </span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                    </li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return(\r\n        <div className=\"card z-depth-0 project-summary\">\r\n                <div className=\"card-content grey-text text-draken-3\">\r\n                    <span className=\"card-title\">{project.title}</span>\r\n                    <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                    <p className=\"grey-text\">\r\n                        {\r\n                            moment(project.createdAt.toDate().toString()).calendar()\r\n                        }\r\n                    </p>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return(\r\n        <div className=\"project-list section\">\r\n            {\r\n                projects && projects.map(project => {\r\n                    return(\r\n                        <Link to={'/project/'+project.id} key={project.id}>\r\n                            <ProjectSummary project={project} key={project.id}/>\r\n                        </Link>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList","import React, { Component } from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        const { projects, auth, notifications } = this.props;\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n        \r\n          return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection:'projects', orderBy: ['createdAt', 'desc'] },\r\n        { collection: 'notifications', limit:3, orderBy: ['time', 'desc']}\r\n    ])\r\n)(Dashboard)\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n    const { project, auth } = props;\r\n    if(!auth.uid) return <Redirect to='/signin' />\r\n    if (project) {\r\n        return(\r\n        <div className=\"container section project-details\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">\r\n                        { project.title }\r\n                    </span>\r\n                   <p>{ project.content }\r\n                   </p>\r\n                </div>\r\n                <div className=\"card-action gery lighten-4 grey-text\">\r\n                    <div>Posted By: { project.authorFirstName } { project.authorLastName }</div>\r\n                    <div>\r\n                    {\r\n                        moment(project.createdAt.toDate().toString()).calendar()\r\n                    }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    } else{\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading Project....</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state,ownProps) => {\r\n    const id = ownProps.match.params.id\r\n    const projects = state.firestore.data.projects\r\n    const project = projects ? projects[id] : null\r\n    return{\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails) ","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n\r\n    }\r\n    handleChange =(e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n    render() {\r\n        const { authError,auth } = this.props;\r\n        if(auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-draken-3\">Sign In</h5>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n\r\n                        <div className=\"red-text center\">\r\n                            { authError ? <p>{ authError }</p> : null}\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>                                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName:'',\r\n        lastName:''\r\n\r\n    }\r\n    handleChange =(e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if(auth.uid) return <Redirect to='/' /> \r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-draken-3\">Sign UP</h5>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                        <div className=\"red-text center\">\r\n                            { authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </form>                                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (creds) => dispatch(signUp(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n\r\n    }\r\n    handleChange =(e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/');\r\n    }\r\n    render() {\r\n        const { auth } = this.props;\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-draken-3\">Create New Project</h5>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                        <textarea className=\"materialize-textarea\" id=\"content\" onChange={this.handleChange}/>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n\r\n                </form>                                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStoreToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        createProject: (project) => dispatch(createProject(project))    \r\n    }\r\n}\r\n\r\nexport default connect(mapStoreToProps,mapDispatchToProps)(CreateProject)\r\n","export const createProject = (project) => {\r\n    return(dispatch, getState, { getFirebase, getFirestore }) => {\r\n        //make async call to database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const autherId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: autherId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type:'CREATE_PROJECT_SUCCESS', project });\r\n        }).catch((err) => {\r\n            dispatch({ type:'CREATE_PROJECT_ERROR', err });\r\n        });\r\n    }\r\n};","import React, { Component } from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState ={\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error')\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('Signout success')\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('Signup Success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('SignUp Error');\r\n            return{\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer","\r\n\r\nconst initState ={\r\n    projects:[\r\n        {id: '1', title: 'help me find peach', content:'blah blah blah'},\r\n        {id: '2', title: 'collect all the stars', content:'blah blah blah'},\r\n        {id: '3', title: 'egg hunt with rup', content:'blah blah blah'},\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project', action.project)\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('Create project error', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBztOtprtzS2u_icBNi4XeIXDw42mk8csc\",\r\n    authDomain: \"net-rup-projectman.firebaseapp.com\",\r\n    databaseURL: \"https://net-rup-projectman.firebaseio.com\",\r\n    projectId: \"net-rup-projectman\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"666661770059\",\r\n    appId: \"1:666661770059:web:cda87127cd5a22a8\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  firebase.firestore().settings({ timestampsInSnapshots: true })\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore,applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer, \n    compose(\n            applyMiddleware(thunk.withExtraArgument({\n            getFirebase, getFirestore\n            })),\n            reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true}),\n            reduxFirestore(fbConfig)\n        )\n    );\n\nstore.firebaseAuthIsReady.then(() =>{\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    serviceWorker.unregister();    \n})\n"],"sourceRoot":""}